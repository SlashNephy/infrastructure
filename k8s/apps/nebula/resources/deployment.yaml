apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment

spec:
  replicas: 2
  selector:
    matchLabels:
      app: default
  template:
    metadata:
      annotations:
        fluentbit.io/exclude: "true"
      labels:
        app: default
    spec:
      containers:
        - name: server
          image: ghcr.io/slashnephy/nebula-server:master@sha256:d59ab3f8796c9c8d09019ccd3224c93bd69491c088015a86920412668c99e80d
          env:
            - name: SERVER_ORIGIN
              value: https://nebula-api.starry.blue
          envFrom:
            - secretRef:
                name: server-secrets
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: media
              mountPath: /backend/media
            - name: avatars
              mountPath: /backend/avatars
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          securityContext:
            allowPrivilegeEscalation: false
        - name: worker
          image: ghcr.io/slashnephy/nebula-server:master@sha256:d59ab3f8796c9c8d09019ccd3224c93bd69491c088015a86920412668c99e80d
          command:
            - /backend/worker
          env:
            - name: SERVER_ORIGIN
              value: https://nebula-api.starry.blue
          envFrom:
            - secretRef:
                name: server-secrets
          volumeMounts:
            - name: media
              mountPath: /backend/media
            - name: avatars
              mountPath: /backend/avatars
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: media
          hostPath:
            path: /mnt/pool/nebula_media
            type: DirectoryOrCreate
        - name: avatars
          hostPath:
            path: /opt/k8s-volumes/nebula/avatars
            type: DirectoryOrCreate
      restartPolicy: Always
      imagePullSecrets:
        - name: ghcr-io-credentials
