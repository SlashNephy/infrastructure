apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-infra

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: infra
  template:
    metadata:
      labels:
        app: infra
    spec:
      containers:
        - name: db
          image: public.ecr.aws/docker/library/postgres:16.8-bookworm@sha256:12c827ab26d9929e1fcf3439ed8f5af8616726d8a605d4dbb010abb797af1821
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
            - name: backup
              mountPath: /backup
              readonly: true
          securityContext:
            allowPrivilegeEscalation: false
        - name: redis
          image: public.ecr.aws/docker/library/redis:7.4.2-bookworm@sha256:6aafb7f25fc93c4ff74e99cff8e85899f03901bc96e61ba12cd3c39e95503c73
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis
              mountPath: /data
          securityContext:
            allowPrivilegeEscalation: false
        - name: river-ui
          image: ghcr.io/riverqueue/riverui:0.8.1@sha256:53c4b7ca46022eafcf15e4d724a86182e50c4018d8451f4039be22ab00e86ff8
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: server-secrets
                  key: JOBQUEUE_DSN
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: db
          hostPath:
            path: /opt/k8s-volumes/nebula/db
            type: DirectoryOrCreate
        - name: redis
          hostPath:
            path: /opt/k8s-volumes/nebula/redis
            type: DirectoryOrCreate
        - name: backup
          hostPath:
            path: /opt/k8s-volumes/nebula/backup
            type: Directory
      restartPolicy: Always
