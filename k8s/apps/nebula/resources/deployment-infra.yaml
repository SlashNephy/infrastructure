apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-infra

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: infra
  template:
    metadata:
      labels:
        app: infra
    spec:
      containers:
        - name: db
          image: public.ecr.aws/docker/library/postgres:16.9-bookworm@sha256:47053cd4ee3f096afc744e53e3280de7b29b3670d2f2196c2acc0c6470923c99
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
            - name: backup
              mountPath: /backup
              readonly: true
          securityContext:
            allowPrivilegeEscalation: false
        - name: redis
          image: public.ecr.aws/docker/library/redis:8.0.2-bookworm@sha256:dbf3e4b6ad3ece9c733282ff3f16942ed754fdc4ea12332154f30a9a9b88c3af
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis
              mountPath: /data
          securityContext:
            allowPrivilegeEscalation: false
        - name: river-ui
          image: ghcr.io/riverqueue/riverui:0.11.0@sha256:a1a9c8f10421b475d9842218aaffc587719096c2fe58f342674681ab2fa5aaf1
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: server-secrets
                  key: JOBQUEUE_DSN
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: db
          hostPath:
            path: /opt/k8s-volumes/nebula/db
            type: DirectoryOrCreate
        - name: redis
          hostPath:
            path: /opt/k8s-volumes/nebula/redis
            type: DirectoryOrCreate
        - name: backup
          hostPath:
            path: /opt/k8s-volumes/nebula/backup
            type: Directory
      restartPolicy: Always
