apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-infra

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: infra
  template:
    metadata:
      labels:
        app: infra
    spec:
      containers:
        - name: db
          image: public.ecr.aws/docker/library/postgres:16.8-bookworm@sha256:301bcb60b8a3ee4ab7e147932723e3abd1cef53516ce5210b39fd9fe5e3602ae
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
            - name: backup
              mountPath: /backup
              readonly: true
          securityContext:
            allowPrivilegeEscalation: false
        - name: redis
          image: public.ecr.aws/docker/library/redis:8.0.0-bookworm@sha256:a4b90e7079b67c41bdf4ca6f9d87197079e4c1c3273b7f489a74f2687d85a05e
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis
              mountPath: /data
          securityContext:
            allowPrivilegeEscalation: false
        - name: river-ui
          image: ghcr.io/riverqueue/riverui:0.9.0@sha256:50dbd2428473dc045644a478385480532ce089627cba3476923858fe22d6142b
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: server-secrets
                  key: JOBQUEUE_DSN
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: db
          hostPath:
            path: /opt/k8s-volumes/nebula/db
            type: DirectoryOrCreate
        - name: redis
          hostPath:
            path: /opt/k8s-volumes/nebula/redis
            type: DirectoryOrCreate
        - name: backup
          hostPath:
            path: /opt/k8s-volumes/nebula/backup
            type: Directory
      restartPolicy: Always
