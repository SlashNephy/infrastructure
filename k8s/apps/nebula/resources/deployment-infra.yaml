apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-infra

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: infra
  template:
    metadata:
      labels:
        app: infra
    spec:
      containers:
        - name: db
          image: public.ecr.aws/docker/library/postgres:16.7-bookworm@sha256:a35ec42526e3c522eb13b4d82eddaee875d0ac6ca9eb5cc5607e412854478c71
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
            - name: backup
              mountPath: /backup
              readonly: true
          securityContext:
            allowPrivilegeEscalation: false
        - name: redis
          image: public.ecr.aws/docker/library/redis:7.4.2-bookworm@sha256:93a8d83b707d0d6a1b9186edecca2e37f83722ae0e398aee4eea0ff17c2fad0e
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis
              mountPath: /data
          securityContext:
            allowPrivilegeEscalation: false
        - name: river-ui
          image: ghcr.io/riverqueue/riverui:0.8.0@sha256:a11999ed0274ccebf43f981174e0521a4c5ee31beedd7394ccac95ffc52d305e
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: server-secrets
                  key: JOBQUEUE_DSN
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: db
          hostPath:
            path: /opt/k8s-volumes/nebula/db
            type: DirectoryOrCreate
        - name: redis
          hostPath:
            path: /opt/k8s-volumes/nebula/redis
            type: DirectoryOrCreate
        - name: backup
          hostPath:
            path: /opt/k8s-volumes/nebula/backup
            type: Directory
      restartPolicy: Always
