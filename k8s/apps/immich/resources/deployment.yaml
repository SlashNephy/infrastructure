apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: default
  template:
    metadata:
      labels:
        app: default
    spec:
      containers:
        - name: server
          image: ghcr.io/immich-app/immich-server:v1.138.0@sha256:12cee930e2cc211a95acae12ad780c0b2eecaea0479a06e255c73a4deb0b3efb
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secret
          ports:
            - containerPort: 2283
          volumeMounts:
            - name: data
              mountPath: /data
            - name: media-nebula
              mountPath: /mnt/pool/nebula_media
              readOnly: true
          resources:
            limits:
              gpu.intel.com/i915: "1"
          securityContext:
            allowPrivilegeEscalation: false
        - name: machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:v1.138.0-openvino@sha256:c7d234f4edcd45c259eda2cebfbf3106ab16880ce41e90ccd2c3ee64bb50e79d
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secret
          volumeMounts:
            - name: model-cache
              mountPath: /cache
            - name: dev-bus-usb
              mountPath: /dev/bus/usb
          resources:
            limits:
              gpu.intel.com/i915: "1"
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: data
          hostPath:
            path: /opt/k8s-volumes/immich/data
            type: DirectoryOrCreate
        - name: model-cache
          hostPath:
            path: /opt/k8s-volumes/immich/model-cache
            type: DirectoryOrCreate
        - name: dev-bus-usb
          hostPath:
            path: /dev/bus/usb
            type: Directory
        - name: media-nebula
          hostPath:
            path: /mnt/pool/nebula_media
            type: Directory
      restartPolicy: Always
