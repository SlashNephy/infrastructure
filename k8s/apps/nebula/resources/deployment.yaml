apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: default
  template:
    metadata:
      annotations:
        fluentbit.io/exclude: "true"
      labels:
        app: default
    spec:
      containers:
        - name: server
          image: ghcr.io/slashnephy/nebula-server:master@sha256:32089a674da4bf0192e34669b163b23f2fe1e3727ee5b06f0bf8af8196c6f0de
          env:
            - name: SERVER_ORIGIN
              value: https://nebula-api.starry.blue
          envFrom:
            - secretRef:
                name: server-secrets
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: media
              mountPath: /app/media
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          securityContext:
            allowPrivilegeEscalation: false
        - name: db
          image: public.ecr.aws/docker/library/postgres:16.1-bookworm@sha256:b09f2562ab14fcae750cfc5ae457cd97e90c37679f520bc4a84180913de90261
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db
              mountPath: /var/lib/postgresql/data
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: media
          hostPath:
            path: /opt/k8s-volumes/nebula/media
            type: DirectoryOrCreate
        - name: db
          hostPath:
            path: /opt/k8s-volumes/nebula/db
            type: DirectoryOrCreate
      restartPolicy: Always
      imagePullSecrets:
        - name: ghcr-io-credentials
