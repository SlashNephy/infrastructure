additionalVolumeMounts:
  - name: plugins
    mountPath: /plugins-storage

autoscaling:
  enabled: false

deployment:
  # middleware が読み込まれていることを確認する
  # additionalContainers:
  #   - name: check-cloudflarewarp-plugin
  #     image: ghcr.io/slashnephy/curl-jq:master
  #     imagePullPolicy: IfNotPresent
  #     command:
  #       - ash
  #       - -c
  #       - |
  #         curl -s http://traefik:8080/api/http/middlewares | jq '.[] | select(.name == "traefik-trust-cloudflare-ips@kubernetescrd")' --exit-status > /dev/null
  additionalVolumes:
    - name: plugins
      persistentVolumeClaim:
        claimName: plugins-storage
  minReadySeconds: 30
  replicas: 2
  terminationGracePeriodSeconds: 7200

envFrom:
  - configMapRef:
      name: traefik-env

experimental:
  plugins:
    cloudflarewarp:
      moduleName: github.com/BetterCorp/cloudflarewarp
      # renovate: datasource=github-tags depName=BetterCorp/cloudflarewarp
      version: v1.3.3

extraObjects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: plugins-storage
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
      selector:
        matchLabels:
          name: plugins-storage
      storageClassName: local
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: plugins-storage
      labels:
        name: plugins-storage
    spec:
      accessModes:
        - ReadWriteMany
      capacity:
        storage: 1Gi
      local:
        path: /opt/k8s-volumes/traefik/plugins-storage
      nodeAffinity:
        required:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - lily
      persistentVolumeReclaimPolicy: Retain
      storageClassName: local

globalArguments: []

image:
  registry: public.ecr.aws/docker/library

ingressRoute:
  dashboard:
    enabled: false

# https://docs.traefik.io/observability/logs/
logs:
  access:
    enabled: true
    # https://docs.traefik.io/observability/access-logs/#limiting-the-fieldsincluding-headers
    fields:
      general:
        defaultmode: keep
        names:
          ClientAddr: drop # ClientHost:ClientPort の組み合わせなので不要
          StartLocal: drop # time で十分
          StartUTC: drop
      headers:
        defaultmode: keep
        names:
          Authorization: redact
          Cookie: redact
          X-Authentik-Jwt: redact
    format: json
  general:
    level: INFO

ports:
  web:
    expose:
      default: true
    nodePort: 80

  websecure:
    asDefault: true
    expose:
      default: true

    forwardedHeaders:
      trustedIPs:
        - 10.0.0.0/16
        - fdac:2d12:9f5::/64

    http3:
      # 同一のポートに対して TCP/UDP を同時に受け入れることができないので別にしておく
      # https://github.com/kubernetes/kubernetes/issues/47249#issuecomment-587960741
      # advertisedPort: 8443
      enabled: true

    # https://doc.traefik.io/traefik/middlewares/overview/
    # https://doc.traefik.io/traefik/routing/entrypoints/#middlewares
    middlewares:
      - traefik-security-headers@kubernetescrd
      # - traefik-custom-error-pages@kubernetescrd
      - traefik-ban-robots@kubernetescrd
      - traefik-trust-cloudflare-ips@kubernetescrd

    nodePort: 443

    # https://doc.traefik.io/traefik/routing/entrypoints/#tls
    tls:
      domains:
        - main: starry.blue
          sans:
            - "*.starry.blue"
            - "*.gateway.starry.blue"
      enabled: true
      options: traefik-cloudflare@kubernetescrd

ocsp:
  enabled: true

priorityClassName: load-balancer

providers:
  kubernetesCRD:
    allowCrossNamespace: true
    allowEmptyServices: true
    allowExternalNameServices: true
    enabled: true
  kubernetesIngress:
    enabled: false

service:
  single: false
  ipFamilyPolicy: PreferDualStack
  type: NodePort
