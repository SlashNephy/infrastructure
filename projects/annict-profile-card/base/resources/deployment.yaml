apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    traefik.http.middlewares.annict-profile-card-stripprefix.stripprefix.prefixes: /annict-profile-card
    traefik.http.routers.annict-profile-card.middlewares: annict-profile-card-stripprefix
    traefik.http.routers.annict-profile-card.rule: Host(`apps.starry.blue`) && PathPrefix(`/annict-profile-card`)
    traefik.http.routers.annict-profile-card.tls: "true"
    traefik.http.services.annict-profile-card.loadbalancer.server.port: "8080"
  name: app

spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      annotations:
        traefik.http.middlewares.annict-profile-card-stripprefix.stripprefix.prefixes: /annict-profile-card
        traefik.http.routers.annict-profile-card.middlewares: annict-profile-card-stripprefix
        traefik.http.routers.annict-profile-card.rule: Host(`apps.starry.blue`) && PathPrefix(`/annict-profile-card`)
        traefik.http.routers.annict-profile-card.tls: "true"
        traefik.http.services.annict-profile-card.loadbalancer.server.port: "8080"
    spec:
      containers:
        - name: app
          image: annict-profile-card
          env:
            - name: ANNICT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: annict-access-token
            - name: RUST_BACKTRACE
              value: full
            - name: RUST_LOG
              value: info,annict_profile_card=trace
      restartPolicy: Always
